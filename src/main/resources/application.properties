#Postgres Connection
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = 123123
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/plit_service

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create

#Change Port
quarkus.http.port=9000

#CORS
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET, POST, PUT, DELETE
quarkus.http.cors.exposed-headers=Contens-Disposition
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true

#KAFKA IN
mp.messaging.incoming.plot-in.topic=plot18
mp.messaging.incoming.plot-in.auto.offset.reset=earliest
mp.messaging.incoming.plot-in.connector=smallrye-kafka
mp.messaging.incoming.plot-in.value.deserializer=org.acme.PlotDeserializer
mp.messaging.incoming.plot-in.broadcast=true

##KAFKA IN
#mp.messaging.incoming.plot-dua.topic=plot5
#mp.messaging.incoming.plot-dua.auto.offset.reset=earliest
#mp.messaging.incoming.plot-dua.connector=smallrye-kafka
#mp.messaging.incoming.plot-dua.value.deserializer=org.acme.PlotDeserializer
#mp.messaging.incoming.plot-dua.broadcast=true
#
###KAFKA OUT
##mp.messaging.outgoing.plot-store.topic=plot6
##mp.messaging.outgoing.plot-store.connector=smallrye-kafka
##mp.messaging.outgoing.plot-store.value.deserializer=org.acme.PlotDeserializer
##mp.messaging.outgoing.plot-store.auto.offset.reset=earliest
##mp.messaging.outgoing.plot-store.merge=true




